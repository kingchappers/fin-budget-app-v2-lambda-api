name: deployLambdaApi

on:
  workflow_dispatch:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
  
jobs: 
  build-go-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.23.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Build createIncome Package for Lambda
        run: | 
          cd ./createIncome
          GOOS=linux GOARCH=arm64 go get "github.com/aws/aws-lambda-go/lambda"
          GOOS=linux GOARCH=arm64 go get "github.com/aws/aws-sdk-go-v2/aws"
          GOOS=linux GOARCH=arm64 go get "github.com/aws/aws-sdk-go-v2/config"
          GOOS=linux GOARCH=arm64 go get "github.com/aws/aws-sdk-go-v2/service/dynamodb"
          GOOS=linux GOARCH=arm64 go get "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
          GOOS=linux GOARCH=arm64 go build -tags lambda.norpc -o bootstrap ./createIncome.go
          zip createIncome.zip bootstrap

  terraform-plan:
    name: AWS Auth
    runs-on: ubuntu-24.04
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Terraform Plan
        run: |
          terraform init 
          terraform plan